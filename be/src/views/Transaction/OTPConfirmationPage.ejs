<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />

    <link rel="stylesheet" href="/css/global.css" />
    <link rel="stylesheet" href="/css/OTPConfirmationPage.css" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Inter:ital,wght@0,400;0,600;0,700;1,900&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Mulish:wght@400;500;600;800&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Rowdies:wght@700&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;500&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Redacted Script:wght@400&display=swap" />
</head>

<body>
    <div class="container">
        <div class="otpconfirmationpage">
            <section class="gmail-validation-parent">
                <div class="vui-lng-kim-tra-bn-gmail-c-wrapper">
                    <div class="vui-lng-kim">Vui lòng kiểm tra bạn gmail của bạn</div>
                </div>
                <!-- Replace the OTP circles with number inputs -->
                <div class="circle-frame">
                    <div class="o-t-p-circle-group">
                        <div class="o-t-p-circle-group-child">
                            <input type="number" class="otp-input" id="otp1" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                    <div class="o-t-p-circle-group">
                        <div class="o-t-p-circle-group-item">
                            <input type="number" class="otp-input" id="otp2" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                    <div class="o-t-p-circle-group">
                        <div class="o-t-p-circle-group-inner">
                            <input type="number" class="otp-input" id="otp3" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                    <div class="o-t-p-circle-group">
                        <div class="ellipse-div">
                            <input type="number" class="otp-input" id="otp4" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                    <div class="o-t-p-circle-group">
                        <div class="o-t-p-circle-group-child1">
                            <input type="number" class="otp-input" id="otp5" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                    <div class="o-t-p-circle-group">
                        <div class="o-t-p-circle-group-child1">
                            <input type="number" class="otp-input" id="otp6" maxlength="1" min="0" max="9" disabled />
                        </div>
                    </div>
                </div>

                <div class="cha-nhn-c-otp-wrapper">
                    <div class="cha-nhn-c">Chưa nhận được OTP? <button id="resetButton" class="reset-button"
                            onclick="sendOTP()">Send to</button>
                    </div>
                </div>
            </section>
            <section class="submit-button-parent">
                <button class="rectangle-parent6" id="groupButton">
                    Back
                </button>
                <button class="confirmation-frame">
                    <div class="confirmation-frame-child hide" id="submit"><a class="text-frame">Submit</a></div>

                </button>
            </section>
        </div>
    </div>
    <script src="/JS/OTPConfirmationPage.js"></script>
    <script>
        var groupButton = document.getElementById("groupButton");
        if (groupButton) {
            groupButton.addEventListener("click", function (e) {
                window.location.href = "/homepage/paymentoftuitionfees";
            });
        }

        var rectangle = document.getElementById("submit");
        if (rectangle) {
            rectangle.addEventListener("click", function (e) {
                window.location.href = "/homepage/paymentoftuitionfees/otpconfirmationpage/transactionresultpage";
            });
        }


        var storedToken = localStorage.getItem('token');
        var email1; // Di chuyển phần khai báo ra khỏi phạm vi của hàm then

        if (storedToken) {
            console.log('Token found in localStorage OTP:', storedToken);
            // Lấy dữ liệu từ token
            fetch('/api/fetchData', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${storedToken}`
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.user) {
                        email1 = data.user.email; // Gán giá trị cho email1 ở đây
                        ail1 = data.user._id;
                        console.log(ail1);
                    } else {
                        console.log('Error fetching user data:', data.message || 'Unknown error');
                    }
                })
                .catch(error => {
                    console.error('Error fetching user data:', error);
                });
        } else {
            console.log('Token not found in localStorage');
            // Nếu token không được tìm thấy, bạn có thể thực hiện xử lý khác tùy theo nhu cầu của bạn
        }
        function sendOTP() {
            // Gửi yêu cầu HTTP đến máy chủ để gửi email
            fetch('/api/sendMail', { // Sửa đổi URL thành "/sendMail"
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({

                    email: email1 // Thay recipient bằng email muốn gửi OTP
                })
            }).then(response => {
                if (response.ok) {
                    alert('Email đã được gửi thành công!');

                    updateCitizenIDWithOTP(ail1);
                } else {
                    alert('Đã xảy ra lỗi khi gửi email.1');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        function updateCitizenIDWithOTP(_id) {
            const storedToken = localStorage.getItem('token');
            const cache = require('memory-cache');

            // Truy cập OTP từ cache
            const cachedOTP = cache.get('sentOTP');

            if (storedToken) {
                fetch('/api/updateCitizenID', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${storedToken}`
                    },
                    body: JSON.stringify({
                        _id: _id,
                        otp: cachedOTP
                    })
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            throw new Error('Failed to update OTP');
                        }
                    })
                    .then(data => {
                        if (data.success) {
                            // Kiểm tra sự giống nhau giữa OTP đã cập nhật và OTP mà người dùng nhập vào từ 6 input
                            const enteredOTP = document.getElementById('otp1').value +
                                document.getElementById('otp2').value +
                                document.getElementById('otp3').value +
                                document.getElementById('otp4').value +
                                document.getElementById('otp5').value +
                                document.getElementById('otp6').value;
                            if (data.user.citizenID === enteredOTP) {
                                // Nếu OTP giống nhau, chuyển hướng sang trang kế tiếp
                                window.location.href = "/nextpage";
                            } else {
                                alert('Mã OTP không khớp.');
                            }
                        } else {
                            throw new Error('Failed to update OTP');
                        }
                    })
                    .catch(error => {
                        console.error('Error updating OTP:', error);
                        alert('Đã xảy ra lỗi khi cập nhật OTP.');
                    });
            } else {
                console.error('Token not found in localStorage');
                alert('Đã xảy ra lỗi khi cập nhật OTP.');
            }
        }


    </script>
</body>

</html>